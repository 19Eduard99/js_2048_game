{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        // eslint-disable-next-line no-console\n        this.board = initialState;\n        this.score = 0;\n        this.button = document.querySelector(\".button\");\n        this.isStarted = false;\n        this.handleClick = this.startOrRestart.bind(this);\n        this.button.addEventListener(\"click\", this.handleClick);\n        this.tableCells = document.querySelectorAll(\".field-cell\");\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(row) {\n                    var currentRow = _this.board[row];\n                    var newRow = currentRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                        newRow[i] = newRow[i] * 2;\n                        newRow[i + 1] = 0;\n                        _this.score += newRow[i];\n                        boardChanged = true;\n                    }\n                    newRow = newRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newRow.length < 4)newRow.push(0);\n                    _this.board[row] = newRow;\n                    if (JSON.stringify(currentRow) !== JSON.stringify(newRow)) boardChanged = true;\n                };\n                var boardChanged = false;\n                for(var row = 0; row < this.board.length; row++)_loop(row);\n                if (boardChanged) {\n                    this.placeRandomNumber(this.board);\n                    this.renderBoard();\n                    this.renderScore();\n                }\n                this.has2048Tile();\n                if (this.checkLose()) this.showLoseMessage();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this, _loop = function(row) {\n                    var currentRow = _this.board[row];\n                    var newRow = currentRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = newRow.length - 1; i > 0; i--)if (newRow[i] === newRow[i - 1]) {\n                        newRow[i] = newRow[i] * 2;\n                        newRow[i - 1] = 0;\n                        _this.score += newRow[i];\n                        boardChanged = true;\n                    }\n                    newRow = newRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newRow.length < 4)newRow.unshift(0);\n                    _this.board[row] = newRow;\n                    if (JSON.stringify(currentRow) !== JSON.stringify(newRow)) boardChanged = true;\n                };\n                var boardChanged = false;\n                for(var row = 0; row < this.board.length; row++)_loop(row);\n                if (boardChanged) {\n                    this.placeRandomNumber(this.board);\n                    this.renderBoard();\n                    this.renderScore();\n                }\n                this.has2048Tile();\n                if (this.checkLose()) this.showLoseMessage();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(row) {\n                    var currentRow = _this.board[row];\n                    var newRow = currentRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                        newRow[i] = newRow[i] * 2;\n                        newRow[i + 1] = 0;\n                        _this.score += newRow[i];\n                        boardChanged = true;\n                    }\n                    newRow = newRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newRow.length < 4)newRow.push(0);\n                    _this.board[row] = newRow;\n                    if (JSON.stringify(currentRow) !== JSON.stringify(newRow)) boardChanged = true;\n                };\n                var boardChanged = false;\n                this.board = this.transpose(this.board);\n                for(var row = 0; row < this.board.length; row++)_loop(row);\n                this.board = this.transpose(this.board);\n                if (boardChanged) {\n                    this.placeRandomNumber(this.board);\n                    this.renderBoard();\n                    this.renderScore();\n                }\n                this.has2048Tile();\n                if (this.checkLose()) this.showLoseMessage();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(row) {\n                    var currentRow = _this.board[row];\n                    var newRow = currentRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = newRow.length - 1; i > 0; i--)if (newRow[i] === newRow[i - 1]) {\n                        newRow[i] = newRow[i] * 2;\n                        newRow[i - 1] = 0;\n                        _this.score += newRow[i];\n                        boardChanged = true;\n                    }\n                    newRow = newRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newRow.length < 4)newRow.unshift(0);\n                    _this.board[row] = newRow;\n                    if (JSON.stringify(currentRow) !== JSON.stringify(newRow)) boardChanged = true;\n                };\n                var boardChanged = false;\n                this.board = this.transpose(this.board);\n                for(var row = 0; row < this.board.length; row++)_loop(row);\n                this.board = this.transpose(this.board);\n                if (boardChanged) {\n                    this.placeRandomNumber(this.board);\n                    this.renderBoard();\n                    this.renderScore();\n                }\n                this.has2048Tile();\n                if (this.checkLose()) this.showLoseMessage();\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(board) {\n                return board[0].map(function(_, colIndex) {\n                    return board.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                var scoreElement = document.querySelector(\".game-score\");\n                scoreElement.textContent = this.score;\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * idle - the game has not started yet (the initial state);\n   * playing - the game is in progress;\n   * win - the game is won;\n   * lose - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                if (!this.isStarted) return \"idle\";\n                else if (this.checkWin()) return \"win\";\n                else if (this.checkLose()) return \"lose\";\n                else return \"playing\";\n            }\n        },\n        {\n            key: \"startOrRestart\",\n            value: function startOrRestart() {\n                if (this.isStarted) this.restart();\n                else this.start();\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                var messageElement = document.querySelector(\".message.message-start\");\n                messageElement.textContent = \"The game has started! Use the arrow keys to play.\";\n                this.button.classList.remove(\"start\");\n                this.button.classList.add(\"restart\");\n                this.button.textContent = \"Restart\";\n                this.isStarted = true;\n                this.placeRandomNumber(this.board);\n                this.placeRandomNumber(this.board);\n                this.renderBoard();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                var messageElement = document.querySelector(\".message.message-start\");\n                var messageLoseElement = document.querySelector(\".message-lose\");\n                var gameScore = document.querySelector(\".game-score\");\n                if (!messageLoseElement.classList.contains(\"hidden\")) messageLoseElement.classList.add(\"hidden\");\n                messageElement.textContent = 'Press \"Start\" to begin game. Good luck!';\n                messageElement.classList.remove(\"hidden\");\n                this.button.classList.remove(\"restart\");\n                this.button.classList.add(\"start\");\n                this.button.textContent = \"Start\";\n                this.isStarted = false;\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                gameScore.textContent = 0;\n                this.renderBoard();\n            }\n        },\n        {\n            key: \"getRandomInt\",\n            value: function getRandomInt(min, max) {\n                return Math.floor(Math.random() * (max - min)) + min;\n            }\n        },\n        {\n            key: \"placeRandomNumber\",\n            value: function placeRandomNumber(board) {\n                var emptyCells = [];\n                for(var row = 0; row < board.length; row++){\n                    for(var col = 0; col < board[row].length; col++)if (board[row][col] === 0) emptyCells.push([\n                        row,\n                        col\n                    ]);\n                }\n                if (emptyCells.length > 0) {\n                    var randomIndex = this.getRandomInt(0, emptyCells.length);\n                    var _emptyCells_randomIndex = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[randomIndex], 2), randomRow = _emptyCells_randomIndex[0], randomCol = _emptyCells_randomIndex[1];\n                    board[randomRow][randomCol] = Math.random() > 0.1 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"renderBoard\",\n            value: function renderBoard() {\n                var _this = this;\n                this.tableCells.forEach(function(cell, index) {\n                    var row = Math.floor(index / 4);\n                    var col = index % 4;\n                    if (_this.board[row][col] !== 0) {\n                        cell.textContent = _this.board[row][col];\n                        cell.className = \"field-cell field-cell--\".concat(_this.board[row][col]);\n                    } else {\n                        cell.textContent = \"\";\n                        cell.className = \"field-cell\";\n                    }\n                });\n            }\n        },\n        {\n            key: \"renderScore\",\n            value: function renderScore() {\n                var scoreElement = document.querySelector(\".game-score\");\n                scoreElement.textContent = this.score;\n            }\n        },\n        {\n            key: \"has2048Tile\",\n            value: function has2048Tile() {\n                for(var row = 0; row < this.board.length; row++)for(var col = 0; col < this.board[row].length; col++){\n                    if (this.board[row][col] >= 2048) return this.showWinMessage();\n                }\n            }\n        },\n        {\n            key: \"showWinMessage\",\n            value: function showWinMessage() {\n                var startMessage = document.querySelector(\".message.message-start\");\n                var winMessage = document.querySelector(\".message.message-win\");\n                var loseMessage = document.querySelector(\".message.message-lose\");\n                startMessage.classList.add(\"hidden\");\n                loseMessage.classList.add(\"hidden\");\n                winMessage.classList.remove(\"hidden\");\n            }\n        },\n        {\n            key: \"showLoseMessage\",\n            value: function showLoseMessage() {\n                var startMessage = document.querySelector(\".message.message-start\");\n                var winMessage = document.querySelector(\".message.message-win\");\n                var loseMessage = document.querySelector(\".message.message-lose\");\n                startMessage.classList.add(\"hidden\");\n                winMessage.classList.add(\"hidden\");\n                loseMessage.classList.remove(\"hidden\");\n            }\n        },\n        {\n            key: \"checkLose\",\n            value: function checkLose() {\n                for(var row = 0; row < this.board.length; row++)for(var col = 0; col < this.board[row].length; col++){\n                    if (this.board[row][col] === 0) return false;\n                }\n                for(var row1 = 0; row1 < this.board.length; row1++)for(var col1 = 0; col1 < this.board[row1].length; col1++){\n                    if (col1 < this.board[row1].length - 1 && this.board[row1][col1] === this.board[row1][col1 + 1]) return false;\n                    if (row1 < this.board.length - 1 && this.board[row1][col1] === this.board[row1 + 1][col1]) return false;\n                }\n                return true;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$initialState = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports($197cd56b15c33885$var$initialState);\ndocument.addEventListener(\"keydown\", function(e) {\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n});\n\n})();\n//# sourceMappingURL=index.77a561ea.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst initialState = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nconst game = new Game(initialState);\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    // eslint-disable-next-line no-console\n    this.board = initialState;\n    this.score = 0;\n    this.button = document.querySelector('.button');\n    this.isStarted = false;\n    this.handleClick = this.startOrRestart.bind(this);\n    this.button.addEventListener('click', this.handleClick);\n    this.tableCells = document.querySelectorAll('.field-cell');\n  }\n\n  moveLeft() {\n    let boardChanged = false;\n\n    for (let row = 0; row < this.board.length; row++) {\n      const currentRow = this.board[row];\n\n      let newRow = currentRow.filter((value) => value !== 0);\n\n      for (let i = 0; i < newRow.length - 1; i++) {\n        if (newRow[i] === newRow[i + 1]) {\n          newRow[i] = newRow[i] * 2;\n          newRow[i + 1] = 0;\n          this.score += newRow[i];\n          boardChanged = true;\n        }\n      }\n\n      newRow = newRow.filter((value) => value !== 0);\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      this.board[row] = newRow;\n\n      if (JSON.stringify(currentRow) !== JSON.stringify(newRow)) {\n        boardChanged = true;\n      }\n    }\n\n    if (boardChanged) {\n      this.placeRandomNumber(this.board);\n      this.renderBoard();\n      this.renderScore();\n    }\n\n    this.has2048Tile();\n\n    if (this.checkLose()) {\n      this.showLoseMessage();\n    }\n  }\n\n  moveRight() {\n    let boardChanged = false;\n\n    for (let row = 0; row < this.board.length; row++) {\n      const currentRow = this.board[row];\n\n      let newRow = currentRow.filter((value) => value !== 0);\n\n      for (let i = newRow.length - 1; i > 0; i--) {\n        if (newRow[i] === newRow[i - 1]) {\n          newRow[i] = newRow[i] * 2;\n          newRow[i - 1] = 0;\n          this.score += newRow[i];\n          boardChanged = true;\n        }\n      }\n\n      newRow = newRow.filter((value) => value !== 0);\n\n      while (newRow.length < 4) {\n        newRow.unshift(0);\n      }\n\n      this.board[row] = newRow;\n\n      if (JSON.stringify(currentRow) !== JSON.stringify(newRow)) {\n        boardChanged = true;\n      }\n    }\n\n    if (boardChanged) {\n      this.placeRandomNumber(this.board);\n      this.renderBoard();\n      this.renderScore();\n    }\n\n    this.has2048Tile();\n\n    if (this.checkLose()) {\n      this.showLoseMessage();\n    }\n  }\n\n  moveUp() {\n    let boardChanged = false;\n\n    this.board = this.transpose(this.board);\n\n    for (let row = 0; row < this.board.length; row++) {\n      const currentRow = this.board[row];\n\n      let newRow = currentRow.filter((value) => value !== 0);\n\n      for (let i = 0; i < newRow.length - 1; i++) {\n        if (newRow[i] === newRow[i + 1]) {\n          newRow[i] = newRow[i] * 2;\n          newRow[i + 1] = 0;\n          this.score += newRow[i];\n          boardChanged = true;\n        }\n      }\n\n      newRow = newRow.filter((value) => value !== 0);\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      this.board[row] = newRow;\n\n      if (JSON.stringify(currentRow) !== JSON.stringify(newRow)) {\n        boardChanged = true;\n      }\n    }\n\n    this.board = this.transpose(this.board);\n\n    if (boardChanged) {\n      this.placeRandomNumber(this.board);\n      this.renderBoard();\n      this.renderScore();\n    }\n\n    this.has2048Tile();\n\n    if (this.checkLose()) {\n      this.showLoseMessage();\n    }\n  }\n\n  moveDown() {\n    let boardChanged = false;\n\n    this.board = this.transpose(this.board);\n\n    for (let row = 0; row < this.board.length; row++) {\n      const currentRow = this.board[row];\n\n      let newRow = currentRow.filter((value) => value !== 0);\n\n      for (let i = newRow.length - 1; i > 0; i--) {\n        if (newRow[i] === newRow[i - 1]) {\n          newRow[i] = newRow[i] * 2;\n          newRow[i - 1] = 0;\n          this.score += newRow[i];\n          boardChanged = true;\n        }\n      }\n\n      newRow = newRow.filter((value) => value !== 0);\n\n      while (newRow.length < 4) {\n        newRow.unshift(0);\n      }\n\n      this.board[row] = newRow;\n\n      if (JSON.stringify(currentRow) !== JSON.stringify(newRow)) {\n        boardChanged = true;\n      }\n    }\n\n    this.board = this.transpose(this.board);\n\n    if (boardChanged) {\n      this.placeRandomNumber(this.board);\n      this.renderBoard();\n      this.renderScore();\n    }\n\n    this.has2048Tile();\n\n    if (this.checkLose()) {\n      this.showLoseMessage();\n    }\n  }\n\n  transpose(board) {\n    return board[0].map((_, colIndex) => board.map((row) => row[colIndex]));\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    const scoreElement = document.querySelector('.game-score');\n\n    scoreElement.textContent = this.score;\n\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.board;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * idle - the game has not started yet (the initial state);\n   * playing - the game is in progress;\n   * win - the game is won;\n   * lose - the game is lost\n   */\n\n  getStatus() {\n    if (!this.isStarted) {\n      return 'idle';\n    } else if (this.checkWin()) {\n      return 'win';\n    } else if (this.checkLose()) {\n      return 'lose';\n    } else {\n      return 'playing';\n    }\n  }\n\n  startOrRestart() {\n    if (this.isStarted) {\n      this.restart();\n    } else {\n      this.start();\n    }\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    const messageElement = document.querySelector('.message.message-start');\n\n    messageElement.textContent =\n      'The game has started! Use the arrow keys to play.';\n\n    this.button.classList.remove('start');\n    this.button.classList.add('restart');\n    this.button.textContent = 'Restart';\n    this.isStarted = true;\n    this.placeRandomNumber(this.board);\n    this.placeRandomNumber(this.board);\n    this.renderBoard();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    const messageElement = document.querySelector('.message.message-start');\n    const messageLoseElement = document.querySelector('.message-lose');\n    const gameScore = document.querySelector('.game-score');\n\n    if (!messageLoseElement.classList.contains('hidden')) {\n      messageLoseElement.classList.add('hidden');\n    }\n\n    messageElement.textContent = 'Press \"Start\" to begin game. Good luck!';\n    messageElement.classList.remove('hidden');\n    this.button.classList.remove('restart');\n    this.button.classList.add('start');\n    this.button.textContent = 'Start';\n    this.isStarted = false;\n\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    gameScore.textContent = 0;\n    this.renderBoard();\n  }\n\n  getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  placeRandomNumber(board) {\n    const emptyCells = [];\n\n    for (let row = 0; row < board.length; row++) {\n      for (let col = 0; col < board[row].length; col++) {\n        if (board[row][col] === 0) {\n          emptyCells.push([row, col]);\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomIndex = this.getRandomInt(0, emptyCells.length);\n      const [randomRow, randomCol] = emptyCells[randomIndex];\n\n      board[randomRow][randomCol] = Math.random() > 0.1 ? 2 : 4;\n    }\n  }\n\n  renderBoard() {\n    this.tableCells.forEach((cell, index) => {\n      const row = Math.floor(index / 4);\n      const col = index % 4;\n\n      if (this.board[row][col] !== 0) {\n        cell.textContent = this.board[row][col];\n        cell.className = `field-cell field-cell--${this.board[row][col]}`;\n      } else {\n        cell.textContent = '';\n        cell.className = 'field-cell';\n      }\n    });\n  }\n\n  renderScore() {\n    const scoreElement = document.querySelector('.game-score');\n\n    scoreElement.textContent = this.score;\n  }\n\n  has2048Tile() {\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] >= 2048) {\n          return this.showWinMessage();\n        }\n      }\n    }\n  }\n\n  showWinMessage() {\n    const startMessage = document.querySelector('.message.message-start');\n    const winMessage = document.querySelector('.message.message-win');\n    const loseMessage = document.querySelector('.message.message-lose');\n\n    startMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n\n    winMessage.classList.remove('hidden');\n  }\n\n  showLoseMessage() {\n    const startMessage = document.querySelector('.message.message-start');\n    const winMessage = document.querySelector('.message.message-win');\n    const loseMessage = document.querySelector('.message.message-lose');\n\n    startMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n\n    loseMessage.classList.remove('hidden');\n  }\n\n  checkLose() {\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] === 0) {\n          return false;\n        }\n      }\n    }\n\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (\n          col < this.board[row].length - 1 &&\n          this.board[row][col] === this.board[row][col + 1]\n        ) {\n          return false;\n        }\n\n        if (\n          row < this.board.length - 1 &&\n          this.board[row][col] === this.board[row + 1][col]\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n"],"names":["$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","TypeError","board","score","button","document","querySelector","isStarted","handleClick","startOrRestart","bind","addEventListener","tableCells","querySelectorAll","key","value","_this","boardChanged","row","_loop","currentRow","newRow","filter","push","JSON","stringify","placeRandomNumber","renderBoard","renderScore","has2048Tile","checkLose","showLoseMessage","unshift","transpose","map","_","colIndex","scoreElement","textContent","checkWin","restart","start","messageElement","classList","remove","add","messageLoseElement","gameScore","contains","min","max","Math","floor","random","emptyCells","col","randomIndex","getRandomInt","_emptyCells_randomIndex","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","err","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","randomRow","randomCol","forEach","cell","index","className","concat","showWinMessage","startMessage","winMessage","loseMessage","row1","col1","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.77a561ea.js.map"}